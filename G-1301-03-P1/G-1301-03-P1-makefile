# Macros
CC := gcc
CFLAGS := -ansi -pedantic -Wall -Wextra
LIBS := -lpthread

# Directories
SRC_DIR := src
SRCLIB_DIR := srclib
OBJ_DIR := obj
HEADER_DIR := includes
LIB_DIR := lib

# Sources, objects, headers, tests, names.
SRC = $(wildcard $(SRC_DIR)/*.c)
SRCLIB = $(wildcard $(SRCLIB_DIR)/*.c)

OBJ = $(patsubst $(SRC_DIR)/%.c,%.o,$(SRC))
OBJLIB = $(patsubst $(SRCLIB_DIR)/%.c,%.o,$(SRCLIB))

HEADER = $(patsubst $(SRC_DIR)/%.c,$(HEADER_DIR)/%.h,$(SRC))
HEADERLIB = $(patsubst $(SRCLIB_DIR)/%.c,$(HEADER_DIR)/%.h,$(SRCLIB))
HEADER_ALL := $(HEADER_DIR)/G-1301-03-P1-types.h

SRCTESTS = $(wildcard $(SRC_DIR)/*_test.c)
OBJTESTS = $(patsubst $(SRC_DIR)/%_test.c,%.o,$(SRCTESTS))
EXETESTS = $(patsubst $(SRC_DIR)/%.c,%,$(SRCTESTS))

LIB_NAME := G-1301-03-P1-libnetworks.a
TGZ_NAME := ../G-1301-03-P1.tgz
DIR_NAME := ../G-1301-03-P1

# Targets 
$(OBJ): $(SRC) $(HEADER) $(HEADER_ALL)
	$(CC) $(CFLAGS) -c $(patsubst %.o, $(SRC_DIR)/%.c, $@) -o $(OBJ_DIR)/$@ $(LIBS)

$(OBJLIB): $(SRCLIB) $(HEADERLIB) $(HEADER_ALL)
	$(CC) $(CFLAGS) -c $(patsubst %.o, $(SRCLIB_DIR)/%.c, $@) -o $(OBJ_DIR)/$@ $(LIBS)

# Tests
$(OBJTESTS): $(SRCTESTS) $(HEADER) $(HEADERLIB) $(HEADER_ALL)
	$(CC) $(CFLAGS) $(EXETESTS) -o $@ $(LIBS)

# Library
$(LIB_NAME): $(OBJLIB)
	ar -rv $@ S^

# PHONY calls
.PHONY: all clean compress

all: $(OBJ) $(OBJLIB)
	$(CC) $(CFLAGS) $^ -o $(OBJ_DIR)/$@ $(LIBS)

compress: clean
	tar -czvf $(TGZ_NAME) $(DIR_NAME)

clean:
	# Executables
	rm $(EXETESTS)
	# Objects
	rm $(OBJ)
	rm $(OBJLIB)
	# TGZ
	rm $(TGZ_NAME)
	
