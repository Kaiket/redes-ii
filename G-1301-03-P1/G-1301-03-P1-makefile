# Macros
CC := gcc
CFLAGS := 
LIBS := -lpthread

# Directories
SRC_DIR := src
SRCLIB_DIR := srclib
OBJ_DIR := obj
HEADER_DIR := includes
LIB_DIR := lib

# Sources, objects, headers, names.
SRC = $(wildcard $(SRC_DIR)/*.c)
SRCLIB = $(wildcard $(SRCLIB_DIR)/*.c)

OBJ = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRC))
OBJLIB = $(patsubst $(SRCLIB_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRCLIB))

HEADERLIB = $(patsubst $(SRCLIB_DIR)/%.c,$(HEADER_DIR)/%.h,$(SRCLIB))
HEADER_ALL = $(HEADER_DIR)/G-1301-03-P1-types.h

DIR_NAME := ../G-1301-03-P1
TGZ_NAME := ../G-1301-03-P1.tgz
LIB_NAME := G-1301-03-P1-libnetworks.a

BINARIES = $(patsubst $(OBJ_DIR)/%.o,%,$(OBJ))

# Targets 
$(BINARIES): $(OBJ) $(OBJLIB)
	$(CC) $(CFLAGS) $(patsubst %, $(OBJ_DIR)/%.o, $@) $(OBJLIB) -o $@ $(LIBS)

$(OBJ): $(SRC) $(HEADERLIB) $(HEADER_ALL)
	$(CC) $(CFLAGS) -c $(patsubst $(OBJ_DIR)/%.o, $(SRC_DIR)/%.c, $@) -o $@ $(LIBS)

$(OBJLIB): $(SRCLIB) $(HEADERLIB) $(HEADER_ALL)
	$(CC) $(CFLAGS) -c $(patsubst $(OBJ_DIR)/%.o, $(SRCLIB_DIR)/%.c, $@) -o $@ $(LIBS)



# Library
$(LIB_NAME): $(OBJLIB)
	ar -rv $(LIB_DIR)/$@ $^

# PHONY calls
.PHONY: all clean compress

all: $(OBJLIB) $(OBJ)
	$(CC) $(CFLAGS) $^ -o $(OBJ_DIR)/$@ $(LIBS)

compress: clean
	tar -czvf $(TGZ_NAME) $(DIR_NAME)

clean:
	rm -f $(wildcard *_test)
	rm -f $(wildcard $(OBJ_DIR)/*.o)
	rm -f $(TGZ_NAME)	
